{
  "title": "Upstage__API_Key_DP_API__250328_185558",
  "user_id": "Siro",
  "full_text": "\"model\": \"document-parse\" # 사용할 모델 지정 (가장 최신 모델 사용) \n} \nresponse = requests.post(url, headers=headers, files=files, data=data) \nprint(response.json()) \n \n●​ ocr: 문서의 텍스트를 인식하도록 설정합니다. auto 또는 force 값을 사용합니다. \n●​ coordinates: 인식된 각 요소의 위치 좌표를 반환할지 여부를 설정합니다. \n●​ chart_recognition: 문서 내 차트 데이터를 인식하여 표로 변환할지 여부입니다. \n●​ output_formats: 결과를 어떤 형식으로 받을지 설정합니다 (html, text, markdown 중 \n선택). \nUnset\n●​ base64_encoding: 특정 레이아웃 요소를 base64로 인코딩해 받을 수 있도록 설정합니다. \n●​ model: 사용할 Document Parse 모델을 지정합니다. \n✨ Step 4. 결과 확인하기 \n정상적으로 요청이 완료되었다면 JSON 형태의 응답을 받게 됩니다. 예시로 출력된 결과는 다음과 \n같습니다. \n \n{ \n\"api\": \"2.0\", \n\"content\": { \n\"html\": \"<h1>INVOICE</h1><p data-category='paragraph'>Sample Text</p>\", \n\"markdown\": \"# INVOICE\\nSample Text\", \n\"text\": \"INVOICE Sample Text\" \n} \n} \n●​ content.html: 문서를 HTML 형태로 변환한 결과입니다. \n●​ content.markdown: 마크다운 형식으로 변환된 결과입니다. \n●​ content.text: 단순 텍스트만 추출된 결과입니다. \n✨ Step 5. 주의 사항 \n●​ 지원 파일 형식: JPEG, PNG, BMP, PDF, TIFF, HEIC, DOCX, PPTX, XLSX \n●​ 최대 파일 크기: 50MB \"model\": \"document-parse\" # 사용할 모델 지정 (가장 최신 모델 사용) \n} \nresponse = requests.post(url, headers=headers, files=files, data=data) \nprint(response.json()) \n \n●​ ocr: 문서의 텍스트를 인식하도록 설정합니다. auto 또는 force 값을 사용합니다. \n●​ coordinates: 인식된 각 요소의 위치 좌표를 반환할지 여부를 설정합니다. \n●​ chart_recognition: 문서 내 차트 데이터를 인식하여 표로 변환할지 여부입니다. \n●​ output_formats: 결과를 어떤 형식으로 받을지 설정합니다 (html, text, markdown 중 \n선택). \nUnset\n●​ base64_encoding: 특정 레이아웃 요소를 base64로 인코딩해 받을 수 있도록 설정합니다. \n●​ model: 사용할 Document Parse 모델을 지정합니다. \n✨ Step 4. 결과 확인하기 \n정상적으로 요청이 완료되었다면 JSON 형태의 응답을 받게 됩니다. 예시로 출력된 결과는 다음과 \n같습니다. \n \n{ \n\"api\": \"2.0\", \n\"content\": { \n\"html\": \"<h1>INVOICE</h1><p data-category='paragraph'>Sample Text</p>\", \n\"markdown\": \"# INVOICE\\nSample Text\", \n\"text\": \"INVOICE Sample Text\" \n} \n} \n●​ content.html: 문서를 HTML 형태로 변환한 결과입니다. \n●​ content.markdown: 마크다운 형식으로 변환된 결과입니다. \n●​ content.text: 단순 텍스트만 추출된 결과입니다. \n✨ Step 5. 주의 사항 \n●​ 지원 파일 형식: JPEG, PNG, BMP, PDF, TIFF, HEIC, DOCX, PPTX, XLSX \n●​ 최대 파일 크기: 50MB ●​ 최대 파일 크기: 50MB \n●​ 최대 페이지 수: 100 페이지 (100 페이지 초과 시 비동기 API 사용 권장) \n●​ 권장 문서 해상도: 최소 너비 640픽셀, 텍스트는 이미지 높이의 2.5% 이상 크기일 것  \n \nUpstage Document Parse API를 활용해 문서를 변환해보셨나요?  \n이제 본격적으로 해커톤을 시작해볼 시간입니다! 🚀🚀 29일 오후 부터 4월 5일 토요일까지 약 일주일 간 활용하실 수 있습니다.  \n2. Upstage API Key 발급 절차 안내 \nAPI Key는 Upstage의 다양한 기능을 사용할 수 있도록 해주는 고유한 키입니다. \n \n \n \n아래 절차에 따라 안전하게 발급받아 사용해 주세요! \n🔑 Upstage API Key 발급 절차 \n1.​ 🔗 업스테이지 콘솔 접속 \n○​ console.upstage.ai로 이동하세요. \n2.​ 🔍 API Keys 클릭 \n○​ 대시보드에서 API Keys 메뉴를 선택합니다.  \n \n \n3.​ ➕ Create New Key 클릭 \n○​ 새로운 API Key 생성을 위해 Create New Key를 클릭하세요. \n \n4.​ 📋 API Key 복사 및 보관 \n○​ 생성된 API Key를 복사하고, 안전한 장소에 보관하세요! \n \n⚠️ API Key 이용 시 주의사항 \n \nAPI Key는 개인 고유 값입니다. 노출 시 타인이 사용할 수 있으니 꼭 주의해 주세요! \n●​ 💾 복사한 API Key는 개인적으로 안전한 공간에 보관해 주세요. \n●​ 🚫 노출된 API Key는 타인에 의해 사용될 수 있어 보안에 주의해야 합니다. \n \nPython\n3. Trying Upstage Document Parse API \n킥오프 진행 전 반드시 Document Parse API까지 호출해보고 오시는 것을 권장 드립니다.  \n \n⚙️ Document Parse란? \nUpstage Document Parse는 다양한 문서를 자동으로 HTML 구조로 변환해주는 모델입니다. 문서 \n내의 단락, 표, 이미지와 같은 레이아웃 요소를 감지하여 문서의 구조를 파악하고, 읽기 순서에 맞게 \n직렬화하여 HTML로 변환합니다. \nDP에 대한 더 자세한 설명은 Introduction to DP 를 확인하세요! \n✨ Step 1. 필수 패키지 설치하기 \n패키지(Package) 란, Python에서 필요한 기능을 모아놓은 \"도구 상자\"입니다. 우리가 API를 1/ Upstage 계정 및 크레딧 발급 안내 \nUpstage에서는 해커톤/프로젝트를 위해 필요한 Credit을 제공받을 수 있습니다. 아래 절차에 따라 \n진행해주시면 감사하겠습니다.  \n🌟 Upstage 가입 절차 안내  \n1.​ Upstage x AWS AI Initiative 가입 (신청서 제출) \n \n●​ 🚀 Making AI Beneficial for All​\nAI Initiative는 대학, 대학병원, 비영리·비정부기관(NGO/NPO) 등 교육과 공익을 위한 \n기관에서 AI 기술을 적극적으로 활용할 수 있도록, Solar Pro(LLM) 및 Document Parse \n모델을 최대 1년간 무료로 제공하고 이에 따른 교육과 실습 지원도 받을 수 있는 AI 지원 \n프로그램 입니다.  \n●​ 반드시 “학교 계정”으로 신청하셔야 합니다. \n●​ 사용 가능 기간 : 신청 후 승인일로부터 2026년 3월 31일까지 \n●​ 신청서 링크 : Upstage x AWS AI Initiative \n \n2.​ 🔗 업스테이지 콘솔 접속 \n○​ console.upstage.ai로 접속해 주세요. \n \n3.​  ✍️ 회원가입 \n●​ 상단의 Login 버튼을 클릭하여 회원가입을 진행해주세요. \n●​ 구글 계정을 통해 간편하게 가입하세요. \n○​ Upstage x AWS AI Initiative에서 신청한  학교 계정으로 가입 바랍니다 \n \n \n⚠️  주의사항 \n●​ 가입 시, 반드시 학교 계정으로 가입하셔야 AI Initiative 프로그램 적용이 가능합니다.  \n●​ 추후 3/31 (월) 여러분들께서 가입한 계정으로 Solar Pro, Document Parse를 제외한 다른 \n모델 사용을 위한 크레딧도 $50 지급될 예정입니다.  \n●​ Information Extract의 경우 Closed Beta로 여러분들께 제공되는 Private API 입니다. 3월 \n29일 오후 부터 4월 5일 토요일까지 약 일주일 간 활용하실 수 있습니다. 1/ Upstage 계정 및 크레딧 발급 안내 \nUpstage에서는 해커톤/프로젝트를 위해 필요한 Credit을 제공받을 수 있습니다. 아래 절차에 따라 \n진행해주시면 감사하겠습니다.  \n🌟 Upstage 가입 절차 안내  \n1.​ Upstage x AWS AI Initiative 가입 (신청서 제출) \n \n●​ 🚀 Making AI Beneficial for All​\nAI Initiative는 대학, 대학병원, 비영리·비정부기관(NGO/NPO) 등 교육과 공익을 위한 \n기관에서 AI 기술을 적극적으로 활용할 수 있도록, Solar Pro(LLM) 및 Document Parse \n모델을 최대 1년간 무료로 제공하고 이에 따른 교육과 실습 지원도 받을 수 있는 AI 지원 \n프로그램 입니다.  \n●​ 반드시 “학교 계정”으로 신청하셔야 합니다. \n●​ 사용 가능 기간 : 신청 후 승인일로부터 2026년 3월 31일까지 \n●​ 신청서 링크 : Upstage x AWS AI Initiative \n \n2.​ 🔗 업스테이지 콘솔 접속 \n○​ console.upstage.ai로 접속해 주세요. \n \n3.​  ✍️ 회원가입 \n●​ 상단의 Login 버튼을 클릭하여 회원가입을 진행해주세요. \n●​ 구글 계정을 통해 간편하게 가입하세요. \n○​ Upstage x AWS AI Initiative에서 신청한  학교 계정으로 가입 바랍니다 \n \n \n⚠️  주의사항 \n●​ 가입 시, 반드시 학교 계정으로 가입하셔야 AI Initiative 프로그램 적용이 가능합니다.  \n●​ 추후 3/31 (월) 여러분들께서 가입한 계정으로 Solar Pro, Document Parse를 제외한 다른 \n모델 사용을 위한 크레딧도 $50 지급될 예정입니다.  \n●​ Information Extract의 경우 Closed Beta로 여러분들께 제공되는 Private API 입니다. 3월 \n29일 오후 부터 4월 5일 토요일까지 약 일주일 간 활용하실 수 있습니다. 사용하려면 먼저 필요한 패키지를 설치해야 해요. Python에서는 pip을 사용해 패키지를 쉽게 설치할 \n수 있습니다. \n이러한 다양한 패키지의 모음을 우리는 라이브러리(Library)라고 부릅니다. \n \n!pip install requests \n \nPython\n✨ Step 2. 간단한 설정과 API 연결하기 \n새로운 Python 파일을 만들고, 아래 코드를 입력해 주세요: \n \nimport requests \napi_key = \"UPSTAGE_API_KEY\" # 여러분의 API Key를 입력하세요. \nurl = \"https://api.upstage.ai/v1/document-ai/document-parse\" \nheaders = { \n\"Authorization\": f\"Bearer {api_key}\" \n} \n●​ api_key: 앞서 발급받은 여러분의 개인 API Key 키입니다. ​\n⚠️ 절대 외부에 노출되지 않도록 주의하세요! \n●​ url: Upstage Document Parse API의 주소입니다. \n✨ Step 3. 간단한 요청 보내기 \n이제 API에 요청을 보내볼까요? 먼저 분석할 문서 파일을 준비해주세요. \n \nPython\nfilename = \"YOUR_FILE_NAME.pdf\" # 분석할 파일명을 입력하세요. \nfiles = {\"document\": open(filename, \"rb\")} \ndata = { \n\"ocr\": \"force\", # OCR을 강제로 수행하도록 설정 (\"auto\"로 설정 시 이미지 문서에서만 OCR 수행) \n\"coordinates\": True, # 각 레이아웃 요소의 위치 정보 반환 여부 \n\"chart_recognition\": True, # 차트 인식 여부 (bar, line, pie 차트를 표로 변환) \n\"output_formats\": \"html\", # 결과를 HTML 형식으로 반환 (\"text\", \"markdown\"도 가능) \n\"base64_encoding\": \"['table']\", # 표에 대한 base64 인코딩 요청 ●​ 최대 파일 크기: 50MB \n●​ 최대 페이지 수: 100 페이지 (100 페이지 초과 시 비동기 API 사용 권장) \n●​ 권장 문서 해상도: 최소 너비 640픽셀, 텍스트는 이미지 높이의 2.5% 이상 크기일 것  \n \nUpstage Document Parse API를 활용해 문서를 변환해보셨나요?  \n이제 본격적으로 해커톤을 시작해볼 시간입니다! 🚀🚀 사용하려면 먼저 필요한 패키지를 설치해야 해요. Python에서는 pip을 사용해 패키지를 쉽게 설치할 \n수 있습니다. \n이러한 다양한 패키지의 모음을 우리는 라이브러리(Library)라고 부릅니다. \n \n!pip install requests \n \nPython\n✨ Step 2. 간단한 설정과 API 연결하기 \n새로운 Python 파일을 만들고, 아래 코드를 입력해 주세요: \n \nimport requests \napi_key = \"UPSTAGE_API_KEY\" # 여러분의 API Key를 입력하세요. \nurl = \"https://api.upstage.ai/v1/document-ai/document-parse\" \nheaders = { \n\"Authorization\": f\"Bearer {api_key}\" \n} \n●​ api_key: 앞서 발급받은 여러분의 개인 API Key 키입니다. ​\n⚠️ 절대 외부에 노출되지 않도록 주의하세요! \n●​ url: Upstage Document Parse API의 주소입니다. \n✨ Step 3. 간단한 요청 보내기 \n이제 API에 요청을 보내볼까요? 먼저 분석할 문서 파일을 준비해주세요. \n \nPython\nfilename = \"YOUR_FILE_NAME.pdf\" # 분석할 파일명을 입력하세요. \nfiles = {\"document\": open(filename, \"rb\")} \ndata = { \n\"ocr\": \"force\", # OCR을 강제로 수행하도록 설정 (\"auto\"로 설정 시 이미지 문서에서만 OCR 수행) \n\"coordinates\": True, # 각 레이아웃 요소의 위치 정보 반환 여부 \n\"chart_recognition\": True, # 차트 인식 여부 (bar, line, pie 차트를 표로 변환) \n\"output_formats\": \"html\", # 결과를 HTML 형식으로 반환 (\"text\", \"markdown\"도 가능) \n\"base64_encoding\": \"['table']\", # 표에 대한 base64 인코딩 요청 사용하려면 먼저 필요한 패키지를 설치해야 해요. Python에서는 pip을 사용해 패키지를 쉽게 설치할 \n수 있습니다. \n이러한 다양한 패키지의 모음을 우리는 라이브러리(Library)라고 부릅니다. \n \n!pip install requests \n \nPython\n✨ Step 2. 간단한 설정과 API 연결하기 \n새로운 Python 파일을 만들고, 아래 코드를 입력해 주세요: \n \nimport requests \napi_key = \"UPSTAGE_API_KEY\" # 여러분의 API Key를 입력하세요. \nurl = \"https://api.upstage.ai/v1/document-ai/document-parse\" \nheaders = { \n\"Authorization\": f\"Bearer {api_key}\" \n} \n●​ api_key: 앞서 발급받은 여러분의 개인 API Key 키입니다. ​\n⚠️ 절대 외부에 노출되지 않도록 주의하세요! \n●​ url: Upstage Document Parse API의 주소입니다. \n✨ Step 3. 간단한 요청 보내기 \n이제 API에 요청을 보내볼까요? 먼저 분석할 문서 파일을 준비해주세요. \n \nPython\nfilename = \"YOUR_FILE_NAME.pdf\" # 분석할 파일명을 입력하세요. \nfiles = {\"document\": open(filename, \"rb\")} \ndata = { \n\"ocr\": \"force\", # OCR을 강제로 수행하도록 설정 (\"auto\"로 설정 시 이미지 문서에서만 OCR 수행) \n\"coordinates\": True, # 각 레이아웃 요소의 위치 정보 반환 여부 \n\"chart_recognition\": True, # 차트 인식 여부 (bar, line, pie 차트를 표로 변환) \n\"output_formats\": \"html\", # 결과를 HTML 형식으로 반환 (\"text\", \"markdown\"도 가능) \n\"base64_encoding\": \"['table']\", # 표에 대한 base64 인코딩 요청 사용하려면 먼저 필요한 패키지를 설치해야 해요. Python에서는 pip을 사용해 패키지를 쉽게 설치할 \n수 있습니다. \n이러한 다양한 패키지의 모음을 우리는 라이브러리(Library)라고 부릅니다. \n \n!pip install requests \n \nPython\n✨ Step 2. 간단한 설정과 API 연결하기 \n새로운 Python 파일을 만들고, 아래 코드를 입력해 주세요: \n \nimport requests \napi_key = \"UPSTAGE_API_KEY\" # 여러분의 API Key를 입력하세요. \nurl = \"https://api.upstage.ai/v1/document-ai/document-parse\" \nheaders = { \n\"Authorization\": f\"Bearer {api_key}\" \n} \n●​ api_key: 앞서 발급받은 여러분의 개인 API Key 키입니다. ​\n⚠️ 절대 외부에 노출되지 않도록 주의하세요! \n●​ url: Upstage Document Parse API의 주소입니다. \n✨ Step 3. 간단한 요청 보내기 \n이제 API에 요청을 보내볼까요? 먼저 분석할 문서 파일을 준비해주세요. \n \nPython\nfilename = \"YOUR_FILE_NAME.pdf\" # 분석할 파일명을 입력하세요. \nfiles = {\"document\": open(filename, \"rb\")} \ndata = { \n\"ocr\": \"force\", # OCR을 강제로 수행하도록 설정 (\"auto\"로 설정 시 이미지 문서에서만 OCR 수행) \n\"coordinates\": True, # 각 레이아웃 요소의 위치 정보 반환 여부 \n\"chart_recognition\": True, # 차트 인식 여부 (bar, line, pie 차트를 표로 변환) \n\"output_formats\": \"html\", # 결과를 HTML 형식으로 반환 (\"text\", \"markdown\"도 가능) \n\"base64_encoding\": \"['table']\", # 표에 대한 base64 인코딩 요청 1/ Upstage 계정 및 크레딧 발급 안내 \nUpstage에서는 해커톤/프로젝트를 위해 필요한 Credit을 제공받을 수 있습니다. 아래 절차에 따라 \n진행해주시면 감사하겠습니다.  \n🌟 Upstage 가입 절차 안내  \n1.​ Upstage x AWS AI Initiative 가입 (신청서 제출) \n \n●​ 🚀 Making AI Beneficial for All​\nAI Initiative는 대학, 대학병원, 비영리·비정부기관(NGO/NPO) 등 교육과 공익을 위한 \n기관에서 AI 기술을 적극적으로 활용할 수 있도록, Solar Pro(LLM) 및 Document Parse \n모델을 최대 1년간 무료로 제공하고 이에 따른 교육과 실습 지원도 받을 수 있는 AI 지원 \n프로그램 입니다.  \n●​ 반드시 “학교 계정”으로 신청하셔야 합니다. \n●​ 사용 가능 기간 : 신청 후 승인일로부터 2026년 3월 31일까지 \n●​ 신청서 링크 : Upstage x AWS AI Initiative \n \n2.​ 🔗 업스테이지 콘솔 접속 \n○​ console.upstage.ai로 접속해 주세요. \n \n3.​  ✍️ 회원가입 \n●​ 상단의 Login 버튼을 클릭하여 회원가입을 진행해주세요. \n●​ 구글 계정을 통해 간편하게 가입하세요. \n○​ Upstage x AWS AI Initiative에서 신청한  학교 계정으로 가입 바랍니다 \n \n \n⚠️  주의사항 \n●​ 가입 시, 반드시 학교 계정으로 가입하셔야 AI Initiative 프로그램 적용이 가능합니다.  \n●​ 추후 3/31 (월) 여러분들께서 가입한 계정으로 Solar Pro, Document Parse를 제외한 다른 \n모델 사용을 위한 크레딧도 $50 지급될 예정입니다.  \n●​ Information Extract의 경우 Closed Beta로 여러분들께 제공되는 Private API 입니다. 3월 \n29일 오후 부터 4월 5일 토요일까지 약 일주일 간 활용하실 수 있습니다. 29일 오후 부터 4월 5일 토요일까지 약 일주일 간 활용하실 수 있습니다.  \n2. Upstage API Key 발급 절차 안내 \nAPI Key는 Upstage의 다양한 기능을 사용할 수 있도록 해주는 고유한 키입니다. \n \n \n \n아래 절차에 따라 안전하게 발급받아 사용해 주세요! \n🔑 Upstage API Key 발급 절차 \n1.​ 🔗 업스테이지 콘솔 접속 \n○​ console.upstage.ai로 이동하세요. \n2.​ 🔍 API Keys 클릭 \n○​ 대시보드에서 API Keys 메뉴를 선택합니다.  \n \n \n3.​ ➕ Create New Key 클릭 \n○​ 새로운 API Key 생성을 위해 Create New Key를 클릭하세요. \n \n4.​ 📋 API Key 복사 및 보관 \n○​ 생성된 API Key를 복사하고, 안전한 장소에 보관하세요! \n \n⚠️ API Key 이용 시 주의사항 \n \nAPI Key는 개인 고유 값입니다. 노출 시 타인이 사용할 수 있으니 꼭 주의해 주세요! \n●​ 💾 복사한 API Key는 개인적으로 안전한 공간에 보관해 주세요. \n●​ 🚫 노출된 API Key는 타인에 의해 사용될 수 있어 보안에 주의해야 합니다. \n \nPython\n3. Trying Upstage Document Parse API \n킥오프 진행 전 반드시 Document Parse API까지 호출해보고 오시는 것을 권장 드립니다.  \n \n⚙️ Document Parse란? \nUpstage Document Parse는 다양한 문서를 자동으로 HTML 구조로 변환해주는 모델입니다. 문서 \n내의 단락, 표, 이미지와 같은 레이아웃 요소를 감지하여 문서의 구조를 파악하고, 읽기 순서에 맞게 \n직렬화하여 HTML로 변환합니다. \nDP에 대한 더 자세한 설명은 Introduction to DP 를 확인하세요! \n✨ Step 1. 필수 패키지 설치하기 \n패키지(Package) 란, Python에서 필요한 기능을 모아놓은 \"도구 상자\"입니다. 우리가 API를 \"model\": \"document-parse\" # 사용할 모델 지정 (가장 최신 모델 사용) \n} \nresponse = requests.post(url, headers=headers, files=files, data=data) \nprint(response.json()) \n \n●​ ocr: 문서의 텍스트를 인식하도록 설정합니다. auto 또는 force 값을 사용합니다. \n●​ coordinates: 인식된 각 요소의 위치 좌표를 반환할지 여부를 설정합니다. \n●​ chart_recognition: 문서 내 차트 데이터를 인식하여 표로 변환할지 여부입니다. \n●​ output_formats: 결과를 어떤 형식으로 받을지 설정합니다 (html, text, markdown 중 \n선택). \nUnset\n●​ base64_encoding: 특정 레이아웃 요소를 base64로 인코딩해 받을 수 있도록 설정합니다. \n●​ model: 사용할 Document Parse 모델을 지정합니다. \n✨ Step 4. 결과 확인하기 \n정상적으로 요청이 완료되었다면 JSON 형태의 응답을 받게 됩니다. 예시로 출력된 결과는 다음과 \n같습니다. \n \n{ \n\"api\": \"2.0\", \n\"content\": { \n\"html\": \"<h1>INVOICE</h1><p data-category='paragraph'>Sample Text</p>\", \n\"markdown\": \"# INVOICE\\nSample Text\", \n\"text\": \"INVOICE Sample Text\" \n} \n} \n●​ content.html: 문서를 HTML 형태로 변환한 결과입니다. \n●​ content.markdown: 마크다운 형식으로 변환된 결과입니다. \n●​ content.text: 단순 텍스트만 추출된 결과입니다. \n✨ Step 5. 주의 사항 \n●​ 지원 파일 형식: JPEG, PNG, BMP, PDF, TIFF, HEIC, DOCX, PPTX, XLSX \n●​ 최대 파일 크기: 50MB ●​ 최대 파일 크기: 50MB \n●​ 최대 페이지 수: 100 페이지 (100 페이지 초과 시 비동기 API 사용 권장) \n●​ 권장 문서 해상도: 최소 너비 640픽셀, 텍스트는 이미지 높이의 2.5% 이상 크기일 것  \n \nUpstage Document Parse API를 활용해 문서를 변환해보셨나요?  \n이제 본격적으로 해커톤을 시작해볼 시간입니다! 🚀🚀 \"model\": \"document-parse\" # 사용할 모델 지정 (가장 최신 모델 사용) \n} \nresponse = requests.post(url, headers=headers, files=files, data=data) \nprint(response.json()) \n \n●​ ocr: 문서의 텍스트를 인식하도록 설정합니다. auto 또는 force 값을 사용합니다. \n●​ coordinates: 인식된 각 요소의 위치 좌표를 반환할지 여부를 설정합니다. \n●​ chart_recognition: 문서 내 차트 데이터를 인식하여 표로 변환할지 여부입니다. \n●​ output_formats: 결과를 어떤 형식으로 받을지 설정합니다 (html, text, markdown 중 \n선택). \nUnset\n●​ base64_encoding: 특정 레이아웃 요소를 base64로 인코딩해 받을 수 있도록 설정합니다. \n●​ model: 사용할 Document Parse 모델을 지정합니다. \n✨ Step 4. 결과 확인하기 \n정상적으로 요청이 완료되었다면 JSON 형태의 응답을 받게 됩니다. 예시로 출력된 결과는 다음과 \n같습니다. \n \n{ \n\"api\": \"2.0\", \n\"content\": { \n\"html\": \"<h1>INVOICE</h1><p data-category='paragraph'>Sample Text</p>\", \n\"markdown\": \"# INVOICE\\nSample Text\", \n\"text\": \"INVOICE Sample Text\" \n} \n} \n●​ content.html: 문서를 HTML 형태로 변환한 결과입니다. \n●​ content.markdown: 마크다운 형식으로 변환된 결과입니다. \n●​ content.text: 단순 텍스트만 추출된 결과입니다. \n✨ Step 5. 주의 사항 \n●​ 지원 파일 형식: JPEG, PNG, BMP, PDF, TIFF, HEIC, DOCX, PPTX, XLSX \n●​ 최대 파일 크기: 50MB 29일 오후 부터 4월 5일 토요일까지 약 일주일 간 활용하실 수 있습니다.  \n2. Upstage API Key 발급 절차 안내 \nAPI Key는 Upstage의 다양한 기능을 사용할 수 있도록 해주는 고유한 키입니다. \n \n \n \n아래 절차에 따라 안전하게 발급받아 사용해 주세요! \n🔑 Upstage API Key 발급 절차 \n1.​ 🔗 업스테이지 콘솔 접속 \n○​ console.upstage.ai로 이동하세요. \n2.​ 🔍 API Keys 클릭 \n○​ 대시보드에서 API Keys 메뉴를 선택합니다.  \n \n \n3.​ ➕ Create New Key 클릭 \n○​ 새로운 API Key 생성을 위해 Create New Key를 클릭하세요. \n \n4.​ 📋 API Key 복사 및 보관 \n○​ 생성된 API Key를 복사하고, 안전한 장소에 보관하세요! \n \n⚠️ API Key 이용 시 주의사항 \n \nAPI Key는 개인 고유 값입니다. 노출 시 타인이 사용할 수 있으니 꼭 주의해 주세요! \n●​ 💾 복사한 API Key는 개인적으로 안전한 공간에 보관해 주세요. \n●​ 🚫 노출된 API Key는 타인에 의해 사용될 수 있어 보안에 주의해야 합니다. \n \nPython\n3. Trying Upstage Document Parse API \n킥오프 진행 전 반드시 Document Parse API까지 호출해보고 오시는 것을 권장 드립니다.  \n \n⚙️ Document Parse란? \nUpstage Document Parse는 다양한 문서를 자동으로 HTML 구조로 변환해주는 모델입니다. 문서 \n내의 단락, 표, 이미지와 같은 레이아웃 요소를 감지하여 문서의 구조를 파악하고, 읽기 순서에 맞게 \n직렬화하여 HTML로 변환합니다. \nDP에 대한 더 자세한 설명은 Introduction to DP 를 확인하세요! \n✨ Step 1. 필수 패키지 설치하기 \n패키지(Package) 란, Python에서 필요한 기능을 모아놓은 \"도구 상자\"입니다. 우리가 API를 ●​ 최대 파일 크기: 50MB \n●​ 최대 페이지 수: 100 페이지 (100 페이지 초과 시 비동기 API 사용 권장) \n●​ 권장 문서 해상도: 최소 너비 640픽셀, 텍스트는 이미지 높이의 2.5% 이상 크기일 것  \n \nUpstage Document Parse API를 활용해 문서를 변환해보셨나요?  \n이제 본격적으로 해커톤을 시작해볼 시간입니다! 🚀🚀 29일 오후 부터 4월 5일 토요일까지 약 일주일 간 활용하실 수 있습니다.  \n2. Upstage API Key 발급 절차 안내 \nAPI Key는 Upstage의 다양한 기능을 사용할 수 있도록 해주는 고유한 키입니다. \n \n \n \n아래 절차에 따라 안전하게 발급받아 사용해 주세요! \n🔑 Upstage API Key 발급 절차 \n1.​ 🔗 업스테이지 콘솔 접속 \n○​ console.upstage.ai로 이동하세요. \n2.​ 🔍 API Keys 클릭 \n○​ 대시보드에서 API Keys 메뉴를 선택합니다.  \n \n \n3.​ ➕ Create New Key 클릭 \n○​ 새로운 API Key 생성을 위해 Create New Key를 클릭하세요. \n \n4.​ 📋 API Key 복사 및 보관 \n○​ 생성된 API Key를 복사하고, 안전한 장소에 보관하세요! \n \n⚠️ API Key 이용 시 주의사항 \n \nAPI Key는 개인 고유 값입니다. 노출 시 타인이 사용할 수 있으니 꼭 주의해 주세요! \n●​ 💾 복사한 API Key는 개인적으로 안전한 공간에 보관해 주세요. \n●​ 🚫 노출된 API Key는 타인에 의해 사용될 수 있어 보안에 주의해야 합니다. \n \nPython\n3. Trying Upstage Document Parse API \n킥오프 진행 전 반드시 Document Parse API까지 호출해보고 오시는 것을 권장 드립니다.  \n \n⚙️ Document Parse란? \nUpstage Document Parse는 다양한 문서를 자동으로 HTML 구조로 변환해주는 모델입니다. 문서 \n내의 단락, 표, 이미지와 같은 레이아웃 요소를 감지하여 문서의 구조를 파악하고, 읽기 순서에 맞게 \n직렬화하여 HTML로 변환합니다. \nDP에 대한 더 자세한 설명은 Introduction to DP 를 확인하세요! \n✨ Step 1. 필수 패키지 설치하기 \n패키지(Package) 란, Python에서 필요한 기능을 모아놓은 \"도구 상자\"입니다. 우리가 API를 1/ Upstage 계정 및 크레딧 발급 안내 \nUpstage에서는 해커톤/프로젝트를 위해 필요한 Credit을 제공받을 수 있습니다. 아래 절차에 따라 \n진행해주시면 감사하겠습니다.  \n🌟 Upstage 가입 절차 안내  \n1.​ Upstage x AWS AI Initiative 가입 (신청서 제출) \n \n●​ 🚀 Making AI Beneficial for All​\nAI Initiative는 대학, 대학병원, 비영리·비정부기관(NGO/NPO) 등 교육과 공익을 위한 \n기관에서 AI 기술을 적극적으로 활용할 수 있도록, Solar Pro(LLM) 및 Document Parse \n모델을 최대 1년간 무료로 제공하고 이에 따른 교육과 실습 지원도 받을 수 있는 AI 지원 \n프로그램 입니다.  \n●​ 반드시 “학교 계정”으로 신청하셔야 합니다. \n●​ 사용 가능 기간 : 신청 후 승인일로부터 2026년 3월 31일까지 \n●​ 신청서 링크 : Upstage x AWS AI Initiative \n \n2.​ 🔗 업스테이지 콘솔 접속 \n○​ console.upstage.ai로 접속해 주세요. \n \n3.​  ✍️ 회원가입 \n●​ 상단의 Login 버튼을 클릭하여 회원가입을 진행해주세요. \n●​ 구글 계정을 통해 간편하게 가입하세요. \n○​ Upstage x AWS AI Initiative에서 신청한  학교 계정으로 가입 바랍니다 \n \n \n⚠️  주의사항 \n●​ 가입 시, 반드시 학교 계정으로 가입하셔야 AI Initiative 프로그램 적용이 가능합니다.  \n●​ 추후 3/31 (월) 여러분들께서 가입한 계정으로 Solar Pro, Document Parse를 제외한 다른 \n모델 사용을 위한 크레딧도 $50 지급될 예정입니다.  \n●​ Information Extract의 경우 Closed Beta로 여러분들께 제공되는 Private API 입니다. 3월 \n29일 오후 부터 4월 5일 토요일까지 약 일주일 간 활용하실 수 있습니다.",
  "emotions": [
    {
      "label": "approval",
      "score": 0.949
    },
    {
      "label": "anger",
      "score": 0.746
    },
    {
      "label": "admiration",
      "score": 0.601
    },
    {
      "label": "confusion",
      "score": 0.322
    },
    {
      "label": "caring",
      "score": 0.306
    }
  ],
  "embedding": []
}